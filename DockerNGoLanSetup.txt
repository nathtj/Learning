A) Create Virtual Box
=======================================================================
1. Crate a Ubuntu box on Oracle VM, 2CPU, 8GB Ram, 100GB HD, Bridge Adapter

B) Set proxy for APT-GET Ubuntu package manager
=======================================================================
1. Create a file 40proxy under /etc/apt/apt.confg.d and add a line Acquire::http::Proxy "http://user:pwd@proxy.com:8080";

C) System level proxy setting:
=======================================================================
1. From Acitivty ---> Select Network proxy ---> Manual ---> http://user:pwd@proxy.com:8080
2. Re-start

D) Set proxy for FireFox
=======================================================================
1. Open Menu ---> Preferences ---> Network Proxy ---> Select Manual Proxy ---> put proxy.com and prot 8080ubuntu

E) Install GO Lang
=======================================================================
1. Download from https://dl.google.com/go/go1.10.linux-amd64.tar.gz
2. Go to Download directory
3. sudo tar -C /usr/local -xzf go1.10.linux-amd64.tar.gz
4. sudo nano ~/.profile

F) Install Docker 
=======================================================================
1. https://docs.docker.com/install/linux/docker-ce/ubuntu/#prerequisites
2. sudo apt-get update
3. sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common
4.	export https_porxy=http://user:pwd@proxy.com:8080
4.1 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
5. sudo apt-key fingerprint 0EBFCD88
6. sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
7. sudo apt-get update
8.  sudo apt-get install docker-ce
9. apt-cache madison docker-ce
10. sudo apt-get install docker-ce=<VERSION>
if run by local user sudo usermod -a -G docker $USER
docker rmi --- to remvoe the tag

G) Set Docker Proxy
=======================================================================
1. sudo  mkdir /etc/systemd/system/docker.service.d
2. Add proxy in /etc/systemd/system/docker.service.d/http-proxy.conf file:
	# cat /etc/systemd/system/docker.service.d/http-proxy.conf
	[Service]
	Environment="HTTP_PROXY=user:pwd@web-proxy.com:8080/"
	Environment="HTTPS_PROXY=user:pwd@web-proxy.com:8080/"
	Environment="NO_PROXY=localhost,127.0.0.1,localaddress,.localdomain.com"
3.  Flush changes: sudo systemctl daemon-reload
4.  Restart Docker: suod systemctl restart docker
5.  sudo docker run hello-world

verify the setting:
systemctl show --property=Environment docker

H) REST Demo with GO Lan and Docker

1. go to hub.docker.com
2. use the Golang container
3. 	FROM golang:1.10
	WORKDIR /go/src/app
	COPY . .
	RUN go get -d -v ./...
	RUN go install -v ./...
	CMD ["app"]

4. docker build -t my-golang-app .
5. docker run -p 9090:9090/tcp  my-golang-app 


atom 
=======================================================================
1. Download Atom Deb file
2. sudo dpkg -i paht/to/file.deb

3. atom proxy
    under $home/.atom/.apmrc
     http_proxy="http://user:pwd@proxy.com:8080"
     https_proxy="http://user:pwd@proxy.com:8080"

Install go-plus to atom
=======================================================================
sudo add-apt-repository ppa:webupd8team/atom
sudo apt update; sudo apt install atom

1. from terminal export https_proxy="http://user:pwd@proxy.com:8080"
2. run atom from terminal
3. Install go-plus


3.  go get -u golang.org/x/tools/cmd/goimports
4. go get -u golang.org/x/tools/cmd/gorename
5. go get -u github.com/sqs/goreturns
5.1 go get -u github.com/nsf/gocode

6.  go get -u github.com/alecthomas/gometalinter
7. go get -u github.com/zmb3/gogetdoc
8. go get -u github.com/zmb3/goaddimport
9.  go get -u github.com/rogpeppe/godef
10. go get -u golang.org/x/tools/cmd/guru
11. go get -u github.com/fatih/gomodifytags
12. go get -u github.com/tpng/gopkgs

VB Share direcotry:
========================
1. With Virtual machine running click Devices-->Inert Guest Additions CD
2. From Machine --> Setting ---> Shared Folders ---> click Add
3. Proivde C:\sharepath---> select Make permanent and Auto mount
4. Re-start the VB machine
5. loing and from terminal type sudo adduser yourusername vboxsf
6. Logout and login g


https://github.com/joefitzgerald/go-plus

Git setup
=====================
1. Installing from source:
	https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-16-04
	1. sudo apt-get install build-essential libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip
	2. wget https://github.com/git/git/archive/v2.8.1.zip -O git.zip, using the https_proxy
	3. unzip git.zip, cd git-*
	4. make prefix=/usr/local all
	5. sudo make prefix=/usr/local install
	
	
git config --global http.proxy http://user:pwd@proxy.com:8080

export SYS_PROXY="http://user:pwd@proxy.com:8080"
export HTTP_PROXY=$SYS_PROXY
export HTTPS_PROXY=$SYS_PROXY


=============

3. Prefer IPv4 over IPv6, change the /etc/gai.lconf precedence ::ffff:0:0/96  100
sudo sysctl -p
You will see this in the terminal:
disbaled IPv6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
After that, if you run:

$ cat /proc/sys/net/ipv6/conf/all/disable_ipv6


6. for proxy setting
 Environment variables
edit the file /etc/environmen



Eclipse installation
====================
http://ubuntuhandbook.org/index.php/2016/01/how-to-install-the-latest-eclipse-in-ubuntu-16-04-15-10/

OpenShit --- 
====================
1. oc cluster up
2. 
Edit the daemon.json file, whose default location is /etc/docker/daemon.json on Linux or C:\ProgramData\docker\config\daemon.json on Windows Server. If you use Docker for Mac or Docker for Windows, click the Docker icon, choose Preferences, and choose +Daemon.

If the daemon.json file does not exist, create it. Assuming there are no other settings in the file, it should have the following contents:

{
  "insecure-registries" : ["myregistrydomain.com:5000"]
}



Need openshift client
============================
Origin config path under /var/lib/origin

oc cluster up --env HTTP_PROXY=proxy.host --env HTTPS_PROXY=proxy.host --env NO_PROXY="10.128.0.0/14,172.30.0.0/16,192.168.0.0/16" this not worked with docker

oc cluster up --http-proxy=http://@proxy.com:8080 --https-proxy=http://@proxy.com:8080

Start openshit: 
oc cluster up --public-hostname=IP --host-data-dir=~/ocdata

docker exec -it origin bash


Deploying to unscure registroy https://docs.docker.com/registry/insecure/#deploy-a-plain-http-registry
https://blog.openshift.com/getting-started-docker-registry/

https://docs.openshift.com/enterprise/3.0/cli_reference/manage_cli_profiles.html



oc port-forward <pod-name> <local-port>:<remote:port>

get running port
lsof -i 
sudo netstat -peanut | grep ":8000 "
================
go concurrency pattern by Robe Pike .... 


docker file for go lang
FROM golang:stretch as gobuild
WORKDIR /go/src
ADD ./xya/*.go ./
ADD ./github.com /go/src/github.com/

RUN CGO_ENABLED=0 GOOS=linux go build -a -ldflags `-extldflags "-static"` -o subt
EXPOSE 9999/TCP

FROM scratch
 WORKDIR /
 COPY --from=gobuild /go/src/stub .
 EXPOSE 8888
 CMD ["./stub"]
 ====
 for access to thecnology WEST cost
 Mike and Zhiyuan Ying.
 Yenwen Wang
 
 ================
 BitBuckets, Jinkins Zhiyuan Ying, data power api getway
 
 
 
 splunk: admin, changeme
 
 
 NGX, apache proxy
gateway
container with services

Kong, netflix zuul
wso2 tyk nginx amazone

service descovery etcd or consul

hystrix ?

1. Docker container capability and how we will research plan
2. Go Lang capability and research plan
3. Graph SQL capability and research plan
4. gRPC capability and research plan
5. Splunk capability and research plan
6. IDE Atom vs Sublime vs VSCode vs Webstorm capability and research plan

Splunk
================
user nathtj/T@2014
calling event for Splunk
